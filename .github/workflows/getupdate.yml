name: Clone and Copy Docs

on:
  workflow_dispatch:
    inputs:
      repo_uri:
        description: 'Repository URI'
        required: true
      token:
        description: 'Access Token'
        required: true
      version:
        description: 'Version Number'
        required: true

jobs:
    clone-and-copy:
      runs-on: ubuntu-latest
  
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
  
        - name: Clone external repository and copy docs
          run: |
            # Parse repository name from URI
            REPO_NAME=$(basename $REPO_URI .git)
            echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
  
            # Configure git
            git config --global user.name 'siamak-zanjani'
            git config --global user.email 'siamak-zanjani@octasic.com'
  
            # Clone the external repository
            git clone https://${{ github.event.inputs.token }}@$REPO_URI external-repo
            cd external-repo
  
            # Copy docs to the specific folder in the current repository
            mkdir -p $GITHUB_WORKSPACE/data/my-website/docs/$REPO_NAME/${{ github.event.inputs.version }}
            cp -r docs/* $GITHUB_WORKSPACE/data/my-website/docs/$REPO_NAME/${{ github.event.inputs.version }}
  
            # Navigate back to the workspace
            cd $GITHUB_WORKSPACE
  
            # Commit and push the changes
            git add data/my-website/docs/$REPO_NAME/${{ github.event.inputs.version }}
            git commit -m "Added docs from $REPO_URI version ${{ github.event.inputs.version }}"
            git push
          env:
            REPO_URI: ${{ github.event.inputs.repo_uri }}
            REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Assuming you are using the GitHub token
            VERSION: ${{ github.event.inputs.version }}
    build-and-deploy:
      needs: clone-and-copy 
      runs-on: ubuntu-latest
      permissions:  # Set the required permissions for this job
        contents: read
        pages: write
        id-token: write
      container:
          image: node:latest
    
      steps:
        - name: Checkout
          uses: actions/checkout@v4
    
        - name: Navigate To data Folder
          run: cd data/my-website/ && ls        
    
        - name: Install Dependencies
          run: npm install
          working-directory: ./data/my-website # Ensure this is the correct path to your project's root with package.json
    
    
        - name: Build Project
          run: npm run build
          working-directory: ./data/my-website # Ensure this is the correct path to your project's root with package.json
    
    
        - name: Setup Pages
          uses: actions/configure-pages@v4
    
        - name: Upload artifact
          uses: actions/upload-pages-artifact@v3
          with:
              path: './data/my-website/build' # Change this to the directory where your build output is located
    
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4
    
        # This step will output the URL where your site has been deployed
        - name: Check deployment URL
          run: echo "Deployed to ${{ steps.deployment.outputs.page_url }}"
    